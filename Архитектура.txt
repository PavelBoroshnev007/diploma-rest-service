Архитектура приложения


FRONTEND (Vue.js приложение):
-Реализует пользовательский интерфейс для взаимодействия с пользователями.
-Отправляет HTTP запросы на BACKEND для выполнения операций, таких как авторизация и управление файлами.
-Взаимодействует с пользователем через веб-интерфейс.

BACKEND (Spring Boot приложение):
-Обрабатывает запросы от FRONTEND и выполняет операции, связанные с авторизацией пользователей, загрузкой и управлением файлами.
-Взаимодействует с базой данных для хранения информации о пользователях и их файлов.
-Обеспечивает безопасность и авторизацию запросов.

DATABASE (SQL или NoSQL):
-Хранит информацию о пользователях (логины и пароли) и их файлы (названия, размеры, содержимое).
-Обеспечивает доступ к данным для BACKEND и поддерживает их целостность.

Хранение настроек:
В соответствии с требованиями задания, настройки приложения должны быть вычитаны из файла настроек в формате YAML. Для этого в вашем приложении может быть создан отдельный файл настроек, который содержит параметры, такие как URL для подключения к базе данных, порт для запуска приложения и другие настройки. Этот файл может быть загружен и разбит на соответствующие объекты в вашем приложении (например, с помощью Spring Boot @ConfigurationProperties).

Хранение файлов и данных в базе данных:
Файлы, загружаемые пользователями, могут быть сохранены в базе данных или в файловой системе, а их метаданные (названия, размеры) - в базе данных. Это может быть реализовано следующим образом:
-В базе данных хранится информация о каждом файле (название, размер, содержимое).
-Сам файл может быть сохранен в виде BLOB (Binary Large OBject) в SQL базе данных или как документ в NoSQL базе данных, либо в файловой системе с сохранением пути к нему в базе данных.

Таким образом, приложение будет иметь доступ к файлам и их метаданным через BACKEND, который будет управлять их загрузкой, удалением и обновлением в базе данных.